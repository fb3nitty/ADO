{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.1.42791",
      "templateHash": "258889424152081934"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "vmssName": {
      "type": "string",
      "defaultValue": "vmss-devops-agents",
      "metadata": {
        "description": "Name of the VM Scale Set"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D4s_v3",
      "metadata": {
        "description": "Size of the VM instances"
      }
    },
    "instanceCount": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 1,
      "maxValue": 100,
      "metadata": {
        "description": "Number of VM instances"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "Admin username for the VMs"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for the VMs"
      }
    },
    "microsoftImageType": {
      "type": "string",
      "defaultValue": "vs2022-enterprise",
      "allowedValues": [
        "vs2022-enterprise",
        "vs2022-buildtools",
        "vs2019-enterprise",
        "windowsserver-2022"
      ],
      "metadata": {
        "description": "Microsoft prebuilt runner image type to use"
      }
    },
    "azureDevOpsUrl": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Azure DevOps organization URL. Required for agent registration."
      }
    },
    "azureDevOpsPat": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Azure DevOps Personal Access Token. Required for agent registration."
      }
    },
    "agentPoolName": {
      "type": "string",
      "defaultValue": "Default",
      "metadata": {
        "description": "Azure DevOps agent pool name"
      }
    },
    "configureDevOpsAgent": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Configure Azure DevOps agent via PowerShell script. Set to false if agents are pre-configured in the image."
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "vnet-devops",
      "metadata": {
        "description": "Virtual network name (will be created if using new VNet, or referenced if using existing)"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "subnet-agents",
      "metadata": {
        "description": "Subnet name (will be created if using new VNet, or referenced if using existing)"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Virtual network address prefix (only used when creating new VNet)"
      }
    },
    "subnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "Subnet address prefix (only used when creating new VNet)"
      }
    },
    "nsgName": {
      "type": "string",
      "defaultValue": "nsg-devops-agents",
      "metadata": {
        "description": "Network security group name"
      }
    },
    "useExistingVnet": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Use existing virtual network (true) or create new one (false). If true, specify existingVnetResourceGroup, existingVnetName, and existingSubnetName."
      }
    },
    "existingVnetResourceGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource group name of the existing virtual network (required if useExistingVnet is true)"
      }
    },
    "existingVnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the existing virtual network (required if useExistingVnet is true)"
      }
    },
    "existingSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the existing subnet (required if useExistingVnet is true)"
      }
    },
    "projectTag": {
      "type": "string",
      "defaultValue": "DevOps-Infrastructure",
      "metadata": {
        "description": "Project tag"
      }
    },
    "environmentTag": {
      "type": "string",
      "defaultValue": "Production",
      "metadata": {
        "description": "Environment tag"
      }
    },
    "ownerTag": {
      "type": "string",
      "defaultValue": "DevOps-Team",
      "metadata": {
        "description": "Owner tag"
      }
    },
    "createdDate": {
      "type": "string",
      "defaultValue": "[utcNow('yyyy-MM-dd')]",
      "metadata": {
        "description": "Creation date for resources"
      }
    }
  },
  "variables": {
    "microsoftImageReferences": {
      "vs2022-enterprise": {
        "publisher": "MicrosoftVisualStudio",
        "offer": "visualstudio2022",
        "sku": "vs-2022-ent-latest-ws2022",
        "version": "latest"
      },
      "vs2022-buildtools": {
        "publisher": "MicrosoftVisualStudio",
        "offer": "visualstudio2022",
        "sku": "vs-2022-buildtools-latest-ws2022",
        "version": "latest"
      },
      "vs2019-enterprise": {
        "publisher": "MicrosoftVisualStudio",
        "offer": "visualstudio2019",
        "sku": "vs-2019-ent-latest-ws2019",
        "version": "latest"
      },
      "windowsserver-2022": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2022-datacenter-azure-edition",
        "version": "latest"
      }
    },
    "imageReference": "[variables('microsoftImageReferences')[parameters('microsoftImageType')]]",
    "purchasePlan": "[if(startsWith(parameters('microsoftImageType'), 'vs'), createObject('name', variables('imageReference').sku, 'publisher', variables('imageReference').publisher, 'product', variables('imageReference').offer), null())]",
    "actualVnetName": "[if(parameters('useExistingVnet'), parameters('existingVnetName'), parameters('vnetName'))]",
    "actualSubnetName": "[if(parameters('useExistingVnet'), parameters('existingSubnetName'), parameters('subnetName'))]",
    "actualVnetResourceGroup": "[if(parameters('useExistingVnet'), parameters('existingVnetResourceGroup'), resourceGroup().name)]",
    "networkSecurityGroupRules": [
      {
        "name": "AllowRDPFromVNet",
        "properties": {
          "priority": 1000,
          "protocol": "Tcp",
          "access": "Allow",
          "direction": "Inbound",
          "sourceAddressPrefix": "VirtualNetwork",
          "sourcePortRange": "*",
          "destinationAddressPrefix": "*",
          "destinationPortRange": "3389"
        }
      },
      {
        "name": "AllowHTTPSFromVNet",
        "properties": {
          "priority": 1001,
          "protocol": "Tcp",
          "access": "Allow",
          "direction": "Inbound",
          "sourceAddressPrefix": "VirtualNetwork",
          "sourcePortRange": "*",
          "destinationAddressPrefix": "*",
          "destinationPortRange": "443"
        }
      },
      {
        "name": "AllowHTTPFromVNet",
        "properties": {
          "priority": 1002,
          "protocol": "Tcp",
          "access": "Allow",
          "direction": "Inbound",
          "sourceAddressPrefix": "VirtualNetwork",
          "sourcePortRange": "*",
          "destinationAddressPrefix": "*",
          "destinationPortRange": "80"
        }
      }
    ],
    "commonTags": {
      "Project": "[parameters('projectTag')]",
      "Environment": "[parameters('environmentTag')]",
      "Owner": "[parameters('ownerTag')]",
      "CreatedBy": "Bicep-Template",
      "CreatedDate": "[parameters('createdDate')]",
      "ImageType": "Microsoft-Prebuilt",
      "MicrosoftImageType": "[parameters('microsoftImageType')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-09-01",
      "name": "[parameters('nsgName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "properties": {
        "securityRules": "[variables('networkSecurityGroupRules')]"
      }
    },
    {
      "condition": "[not(parameters('useExistingVnet'))]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-09-01",
      "name": "[parameters('vnetName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetAddressPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "apiVersion": "2023-09-01",
      "name": "[parameters('vmssName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "plan": "[variables('purchasePlan')]",
      "sku": {
        "name": "[parameters('vmSize')]",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
      },
      "properties": {
        "overprovision": false,
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "createOption": "FromImage",
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "imageReference": "[variables('imageReference')]"
          },
          "osProfile": {
            "computerNamePrefix": "[substring(parameters('vmssName'), 0, min(length(parameters('vmssName')), 9))]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "windowsConfiguration": {
              "enableAutomaticUpdates": true,
              "provisionVMAgent": true
            }
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[format('{0}-nic', parameters('vmssName'))]",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "[format('{0}-ipconfig', parameters('vmssName'))]",
                      "properties": {
                        "privateIPAddressVersion": "IPv4",
                        "subnet": {
                          "id": "[resourceId(variables('actualVnetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', variables('actualVnetName'), variables('actualSubnetName'))]"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": "[if(parameters('configureDevOpsAgent'), createArray(createObject('name', 'ConfigureDevOpsAgent', 'properties', createObject('publisher', 'Microsoft.Compute', 'type', 'CustomScriptExtension', 'typeHandlerVersion', '1.10', 'autoUpgradeMinorVersion', true(), 'settings', createObject('fileUris', createArray('https://raw.githubusercontent.com/your-repo/azure-devops-vmss-template/main/scripts/configure-devops-agent.ps1')), 'protectedSettings', createObject('commandToExecute', format('powershell -ExecutionPolicy Unrestricted -File configure-devops-agent.ps1 -AzureDevOpsUrl \"{0}\" -PersonalAccessToken \"{1}\" -AgentPool \"{2}\" -AgentName \"{3}-agent\"', parameters('azureDevOpsUrl'), parameters('azureDevOpsPat'), parameters('agentPoolName'), parameters('vmssName')))))), createArray())]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/autoscalesettings",
      "apiVersion": "2022-10-01",
      "name": "[format('{0}-autoscale', parameters('vmssName'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "properties": {
        "name": "[format('{0}-autoscale', parameters('vmssName'))]",
        "targetResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('vmssName'))]",
        "enabled": true,
        "profiles": [
          {
            "name": "DefaultProfile",
            "capacity": {
              "minimum": "1",
              "maximum": "10",
              "default": "[string(parameters('instanceCount'))]"
            },
            "rules": [
              {
                "metricTrigger": {
                  "metricName": "Percentage CPU",
                  "metricNamespace": "Microsoft.Compute/virtualMachineScaleSets",
                  "metricResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('vmssName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT5M",
                  "timeAggregation": "Average",
                  "operator": "GreaterThan",
                  "threshold": 75
                },
                "scaleAction": {
                  "direction": "Increase",
                  "type": "ChangeCount",
                  "value": "1",
                  "cooldown": "PT5M"
                }
              },
              {
                "metricTrigger": {
                  "metricName": "Percentage CPU",
                  "metricNamespace": "Microsoft.Compute/virtualMachineScaleSets",
                  "metricResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('vmssName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT5M",
                  "timeAggregation": "Average",
                  "operator": "LessThan",
                  "threshold": 25
                },
                "scaleAction": {
                  "direction": "Decrease",
                  "type": "ChangeCount",
                  "value": "1",
                  "cooldown": "PT5M"
                }
              }
            ]
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('vmssName'))]"
      ]
    }
  ],
  "outputs": {
    "vmssName": {
      "type": "string",
      "value": "[parameters('vmssName')]"
    },
    "vmssId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('vmssName'))]"
    },
    "virtualNetworkId": {
      "type": "string",
      "value": "[if(parameters('useExistingVnet'), resourceId(variables('actualVnetResourceGroup'), 'Microsoft.Network/virtualNetworks', variables('actualVnetName')), resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')))]"
    },
    "subnetId": {
      "type": "string",
      "value": "[resourceId(variables('actualVnetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', variables('actualVnetName'), variables('actualSubnetName'))]"
    },
    "networkSecurityGroupId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
    },
    "imageType": {
      "type": "string",
      "value": "Microsoft-Prebuilt"
    },
    "microsoftImageType": {
      "type": "string",
      "value": "[parameters('microsoftImageType')]"
    },
    "imagePublisher": {
      "type": "string",
      "value": "[variables('imageReference').publisher]"
    },
    "imageOffer": {
      "type": "string",
      "value": "[variables('imageReference').offer]"
    },
    "imageSku": {
      "type": "string",
      "value": "[variables('imageReference').sku]"
    },
    "agentConfigurationMethod": {
      "type": "string",
      "value": "[if(parameters('configureDevOpsAgent'), 'PowerShell Script', 'Pre-configured in Image')]"
    }
  }
}